home fetching user information


import React, { useState } from "react"; // Added useState
import { Link } from 'react-router-dom';
import { useNavigate } from 'react-router-dom';
import Footer from "../components/Footer"; // Ensure this path is correct
// Assuming FontAwesome icons are set up, or use react-icons
// import { FaUser, FaSpinner } from 'react-icons/fa'; // Example if using react-icons

// --- API Simulation (Replace with actual fetch calls) ---
// This function simulates fetching the user profile based on a stored token.
const fetchUserProfile = async () => {
  console.log("Attempting to fetch user profile...");
  // 1. Get token from storage (replace 'authToken' with your actual key)
  const token = localStorage.getItem('authToken');

  if (!token) {
    console.error("No auth token found. User likely not logged in.");
    throw new Error("You are not logged in. Please log in to access the dashboard.");
  }

  console.log("Found token, simulating API call...");
  // 2. Simulate network delay
  await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay

  // 3. Simulate API Request (Replace with actual fetch)
  /*
  try {
    const response = await fetch('/api/user/profile', { // Your ACTUAL backend endpoint
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });

    if (!response.ok) {
      if (response.status === 401) { // Unauthorized
         throw new Error("Your session is invalid or expired. Please log in again.");
      }
      throw new Error(`Failed to fetch profile: ${response.statusText}`);
    }

    const userData = await response.json();
    console.log("API Success:", userData);
    return userData; // e.g., { username: 'Database User', email: 'user@db.com' }

  } catch (error) {
    console.error("Actual API fetch error:", error);
    throw error; // Re-throw to be caught by calling function
  }
  */

  // 4. Simulate successful response for this example
  console.log("Simulating successful API response.");
  return { username: 'Simulated User', email: 'simulated.user@example.com', profilePicUrl: 'some_url.jpg' };

  // 5. To simulate an error response:
  // throw new Error("Simulated API Error: Could not reach server.");
};
// --- End API Simulation ---


export default function Home() {
  const navigate = useNavigate();
  const [isLoadingDashboard, setIsLoadingDashboard] = useState(false);
  const [dashboardError, setDashboardError] = useState(null);

  // --- New Handler for Dashboard Button ---
  const handleDashboardClick = async () => {
    setIsLoadingDashboard(true);
    setDashboardError(null);
    console.log("Dashboard button clicked, attempting fetch...");

    try {
      // Call the function to fetch profile data
      const userProfileData = await fetchUserProfile();

      // If fetch is successful, navigate WITH state
      console.log("Fetch successful, navigating to Dashboard with state:", userProfileData);
      navigate('/Dashboard', { state: { userProfile: userProfileData } });

    } catch (error) {
      // If fetch fails, show error and DON'T navigate
      console.error("Failed to load dashboard data:", error);
      setDashboardError(error.message || "An error occurred while loading your data.");
      // Optionally show an alert or a more prominent error message
      // alert(`Error: ${error.message || "Could not load dashboard."}`);

    } finally {
      // Always stop loading indicator
      setIsLoadingDashboard(false);
    }
  };
  // --- End New Handler ---

  // Other handlers remain the same
  const handleBluetooth = () => { navigate('/Bluetooth'); };
  const handlePlant = () => { navigate('/plant'); };
  const handleclimate = () => { navigate('/Bluetooth'); };

  return (
    <div className="min-h-screen w-screen flex flex-col bg-gray-50">
      <nav className="bg-green-700 w-full fixed top-0 left-0 text-black p-4 shadow-lg bg-gradient-to-b h-24 from-green-700 to-gray-200 z-50">
        <div className="container mx-auto flex justify-between items-center h-full">
          <h1 className="text-2xl font-bold text-black">CropAdvisor</h1>
          <ul className="flex space-x-6 items-center">
            <li><Link to="/home" className="text-black hover:underline">Home</Link></li>
            <li><a href="#about" className="text-black hover:underline">About</a></li>
            <li><a href="#services" className="text-black hover:underline">Services</a></li>
            <li><a href="#contact" className="text-black hover:underline">Contact</a></li>
            <li><Link to="/" className="text-black hover:underline">Login</Link></li>
            <li><Link to="/Register" className="text-black hover:underline">Register</Link></li>
            <li>
              {/* --- Updated Dashboard Button --- */}
              <button
                onClick={handleDashboardClick} // Use the new async handler
                disabled={isLoadingDashboard} // Disable while loading
                className={`bg-fuchsia-950 w-10 h-10 rounded-full text-slate-100 flex items-center justify-center transition duration-200 ${
                  isLoadingDashboard
                    ? 'opacity-70 cursor-not-allowed'
                    : 'hover:bg-fuchsia-800'
                }`}
                aria-label="User Dashboard"
                title={isLoadingDashboard ? "Loading..." : "User Dashboard"} // Tooltip
              >
                {isLoadingDashboard ? (
                  // Simple spinner (or use react-icons FaSpinner)
                  <div className="animate-spin rounded-full h-5 w-5 border-t-2 border-b-2 border-white"></div>
                ) : (
                  <i className='fa-solid fa-user text-xl'></i>
                )}
              </button>
              {/* --- End Updated Button --- */}
            </li>
          </ul>
        </div>
         {/* --- Optional Error Display --- */}
         {dashboardError && (
          <div className="absolute bottom-[-40px] left-1/2 transform -translate-x-1/2 bg-red-100 border border-red-400 text-red-700 px-4 py-1 rounded text-xs shadow">
            Error: {dashboardError}
          </div>
        )}
        {/* --- End Error Display --- */}
      </nav>

      {/* Main Content Wrapper */}
      <main className="flex-grow pt-24 w-full">
        {/* Header Section */}
        <header className="bg-slate-100 text-lime-600 text-center py-16 md:py-20">
          <h2 className="text-4xl font-bold">Welcome to CropAdvisor</h2>
          <p className="mt-4 text-lg">Helping farmers make better crop and soil decisions.</p>
        </header>

        {/* Rest of the Home page content remains the same... */}
        <section
          className="container mx-auto mt-10 p-6 md:p-10 lg:p-16 bg-cover bg-center"
          style={{ backgroundImage: "url('corn.jpg')" }}
        >
           {/* ... card content ... */}
             <div className="flex flex-col lg:flex-row justify-center items-center gap-10 my-10 lg:my-16">
            {/* First Image Card */}
            <div className="bg-white bg-opacity-30 backdrop-blur-md p-6 rounded-xl shadow-lg w-full lg:w-5/12 text-center transform transition duration-300 hover:scale-105">
              <img src="wheat.jpg" alt="Wheat Display" className="w-full h-48 object-cover rounded-lg mb-4" />
              <h3 className="text-xl font-semibold mb-3 text-gray-800">Crop Prediction</h3>
              <button onClick={handleBluetooth} className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition duration-200 w-auto h-auto mt-3">
                Predict Crop
              </button>
            </div>
            {/* Second Image Card */}
            <div className="bg-white bg-opacity-30 backdrop-blur-md p-6 rounded-xl shadow-lg w-full lg:w-5/12 text-center transform transition duration-300 hover:scale-105">
              <img src="soil.jpg" alt="Soil Display" className="w-full h-48 object-cover rounded-lg mb-4" />
               <h3 className="text-xl font-semibold mb-3 text-gray-800">Fertilizer Advice</h3>
              <button onClick={handlePlant} className="bg-green-600 w-auto h-auto text-white px-6 py-2 rounded-lg hover:bg-green-700 transition duration-200 mt-3">
                Get Advice
              </button>
            </div>
          </div>
        </section>

        {/* About Us Section */}
        <div id="about" className="bg-gradient-to-r from-green-50 to-blue-50 py-16">
           {/* ... about content ... */}
             <div className="max-w-screen-xl mx-auto px-6 lg:px-12">
            <div className="text-center mb-16">
              <h2 className="text-4xl font-bold text-green-700 mb-4">About CropAdvisor</h2>
              <p className="text-lg text-gray-700"> Revolutionizing agriculture with data-driven decisions, helping farmers grow smarter and more sustainably. </p>
            </div>
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-16 items-start">
              <div className="space-y-6"> <h3 className="text-3xl font-semibold text-green-600">Our Mission</h3> <p className="text-lg text-gray-600 leading-relaxed"> At CropAdvisor, we empower farmers with cutting-edge technology and data insights to help them plant better and more wisely. Our goal is to boost crop yields, optimize resource use, and promote sustainability in agriculture. </p> </div>
              <div className="space-y-6"> <h3 className="text-3xl font-semibold text-green-600">Key Features</h3> <ul className="list-disc pl-5 text-lg text-gray-600 space-y-3"> <li><strong>Data-Driven Decisions:</strong> Personalized crop and fertilizer recommendations based on soil and weather data.</li> <li><strong>Sustainability Focus:</strong> Helping farmers reduce waste and conserve natural resources.</li> <li><strong>Cost-Effective:</strong> Increasing yields while reducing input costs for better profitability.</li> </ul> </div>
            </div>
            <div className="mt-16 bg-white p-8 rounded-lg shadow-lg"> <div className="text-center"> <h3 className="text-2xl font-semibold text-blue-800 mb-4">Impacting Farmers, Improving Agriculture</h3> <p className="text-lg text-gray-700"> CropAdvisor is not just a platform; it's a partner in the journey towards smarter, sustainable farming. By providing real-time insights and recommendations, we help farmers make the most of their resources and improve crop productivity. </p> </div> </div>
            <div className="text-center mt-16"> <button onClick={handleclimate} className="inline-block px-8 py-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white text-lg rounded-full shadow-md hover:shadow-lg hover:from-blue-700 hover:to-indigo-700 transition duration-300 transform hover:-translate-y-1" > Get Started with CropAdvisor </button> </div>
          </div>
        </div>

        {/* Our Services Section */}
        <section id="services" className="container mx-auto my-16 px-6 lg:px-12">
           {/* ... services content ... */}
            <h3 className="text-4xl font-semibold text-center mb-12 text-green-700"> Our Services </h3>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 lg:gap-12">
            <div className="bg-white bg-opacity-70 backdrop-blur-sm rounded-xl shadow-lg p-6 transition-transform transform hover:scale-105 hover:shadow-xl overflow-hidden"> <img src="soil.jpg" alt="Soil Analysis" className="w-full h-40 object-cover rounded-t-xl mb-4" /> <Link to="/FBluetooth" className="text-2xl font-semibold text-green-700 hover:text-green-800 transition duration-200">Soil Analysis</Link> <p className="text-md text-gray-700 mt-2"> Understand your soil's health and composition to ensure optimal crop growth. </p> </div>
            <div className="bg-white bg-opacity-70 backdrop-blur-sm rounded-xl shadow-lg p-6 transition-transform transform hover:scale-105 hover:shadow-xl overflow-hidden"> <img src="maize.jpg" alt="Crop Recommendations" className="w-full h-40 object-cover rounded-t-xl mb-4" /> <Link to="/Bluetooth" className="text-2xl font-semibold text-green-700 hover:text-green-800 transition duration-200">Crop Recommendations</Link> <p className="text-md text-gray-700 mt-2"> Receive personalized crop recommendations based on your soil and climate data. </p> </div>
            <div className="bg-white bg-opacity-70 backdrop-blur-sm rounded-xl shadow-lg p-6 transition-transform transform hover:scale-105 hover:shadow-xl overflow-hidden"> <img src="germ.jpg" alt="Fertilizer Guidance" className="w-full h-40 object-cover rounded-t-xl mb-4" /> <Link to="/plant" className="text-2xl font-semibold text-green-700 hover:text-green-800 transition duration-200">Fertilizer Advisor</Link> <p className="text-md text-gray-700 mt-2"> Get expert recommendations on the right fertilizers to enhance soil fertility. </p> </div>
          </div>
        </section>

        {/* Footer */}
        <Footer />
      </main>
    </div>
  );
}